{"version":3,"sources":["api/api.js","services/LocalStorageService.js","redux/authReducer.js","redux/redux-store.js","Components/MainPage/MainPage.js","Components/MainPage/MainPageContainer.js","Components/Login/Login.js","Components/SignUp/SignUp.js","App.js","reportWebVitals.js","index.js"],"names":["instance","_service","axios","baseURL","singUpAPI","email","password","phone","invited_by","name","surname","country_key","data","user","post","then","response","tokenAPI","username","token_refresh","userAPI","userId","token__access","get","headers","initialState","isAuth","savedToken","authSuccess","token","type","authReducer","state","action","require","combineReducers","createStore","applyMiddleware","store","auth","thunkMiddleware","window","__store__","MainPage","props","className","onClick","logout","MainPageContainer","this","getUser","localStorage","token_userId","token_access","catch","history","push","to","React","Component","compose","connect","redirectTo","dispatch","a","refreshToken","console","log","setItem","access","removeItem","withRouter","giveToken","refresh","client_id","required","value","undefined","onSubmit","formData","err","alert","handleSubmit","component","placeholder","validate","registerMe","errMessage","selected","App","exact","path","AppContainer","FinalJSApp","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.66c93e8a.chunk.js","sourcesContent":["import * as axios from 'axios';\r\nimport { Redirect } from 'react-router-dom';\r\nimport LocalStorageService from '../services/LocalStorageService';\r\nimport { setRedirect } from '../redux/authReducer'\r\n\r\n// const localStorageService = LocalStorageService.getService();\r\n\r\nconst instance = axios.create({\r\n    baseURL: 'http://erp.apptrix.ru/api/clients',\r\n    // headers,\r\n\r\n})\r\n\r\n// instance.interceptors.response.use((response) => new Promise((resolve, reject) => {\r\n//     resolve(response);\r\n// }),\r\n//     (error) => {\r\n//         if (!error.response) {\r\n//             return new Promise((resolve, reject) => {\r\n//                 reject(error);\r\n//             });\r\n//         }\r\n//         console.log(error.response.status)\r\n//         // debugger\r\n//         if (error.response.status === 401) {\r\n//             // localStorageService.clearToken();\r\n//             window.location.hash ='/login';\r\n//         } else {\r\n//             return new Promise((resolve, reject) => {\r\n//                 reject(error);\r\n//             });\r\n//         }\r\n//     }\r\n// )\r\n\r\n//////////////////////////////////////////////////////////////////////////\r\n// instance.interceptors.request.use( config => {\r\n\r\n//     const token = localStorageService.getAccessToken();\r\n//     debugger\r\n//     if(token){\r\n//         config.headers['Authorization'] = 'Bearer ' + token;\r\n//     }\r\n//     return config;\r\n// }, error => {\r\n//     Promise.reject(error)\r\n// });\r\n\r\n// instance.interceptors.response.use((response) => {\r\n//     return response\r\n// }, function (error){\r\n//     const originalRequest = error.config;\r\n//     debugger\r\n\r\n//     if(error.response.status === 401 && originalRequest.url === \r\n//         '/'){\r\n\r\n//         }\r\n\r\n//     if(error.response.status === 401 && !originalRequest._retry ){\r\n//         originalRequest._retry = true;\r\n//         const refreshToken = localStorageService.getRefreshToken();\r\n//         debugger\r\n//         return instance.post('/token/refresh/',\r\n//             {\r\n//                 \"refresh\": refreshToken\r\n//             })\r\n            \r\n//             .then(res => {\r\n//                 debugger\r\n//                 if(res.status === 201){\r\n//                     localStorageService.setToken(res.data);\r\n//                     instance.defaults.headers.common['Authorization'] = 'Bearer ' + localStorageService.getAccessToken();\r\n//                     return instance(originalRequest);\r\n//                 }\r\n//             });\r\n//     }\r\n//     return Promise.reject(error);\r\n// });\r\n//////////////////////////////////////////////////////////////////////////\r\n\r\n\r\nexport const singUpAPI = {\r\n    postRegistration(email, password, phone, invited_by, name, surname, country_key) {\r\n        const data = {\r\n            user: {\r\n                email: email,\r\n                password: password,\r\n            },\r\n            phone: phone,\r\n            invited_by: invited_by,\r\n            name: name,\r\n            surname: surname,\r\n            country_key: country_key\r\n        }\r\n        return instance.post('/create/', data\r\n            // {\r\n            //     headers: {\r\n            //         'Content-Type': 'application/json'\r\n            //     }\r\n            // }\r\n        )\r\n            .then(response => {\r\n                return response.data;\r\n            });\r\n    }\r\n}\r\n\r\nexport const tokenAPI = {\r\n    postToken(username, password) {\r\n        return instance.post('/token/',\r\n            { username, password },\r\n            // {\r\n            //     headers: {\r\n            //         'Authorization': `Bearer ${localStorage.token}`\r\n            //     }\r\n            // }\r\n        )\r\n            .then(response => {\r\n                return response.data;\r\n            });\r\n    },\r\n    postRefresh(token_refresh) {\r\n        return instance.post('/token/refresh',{\r\n            'refresh': `${token_refresh}`\r\n        }\r\n        )\r\n            .then(response => {\r\n                return response.data;\r\n            });\r\n    }\r\n}\r\n\r\nexport const userAPI = {\r\n    getUser(userId, token__access) {\r\n        return instance.get(`/${userId}/`, {\r\n            headers: {\r\n                'Authorization': `Bearer ${token__access}`\r\n            }\r\n        })\r\n            .then(response => {\r\n                return response.data;\r\n\r\n            });\r\n    },\r\n}","\r\n\r\n\r\nconst LocalStorageService = (function(){\r\n\r\n    var _service;\r\n\r\n    function _getService() {\r\n        if(!_service) {\r\n          _service = this;\r\n          return _service\r\n      }   \r\n    }\r\n\r\n    function _setToken(data) {\r\n        localStorage.setItem('token_access', data.access);\r\n        localStorage.setItem('token_refresh', data.refresh);\r\n      }\r\n\r\n    function _getAccessToken() {\r\n        return localStorage.getItem('token_access');\r\n    }\r\n\r\n    function _getRefreshToken() {\r\n        return localStorage.getItem('token_refresh');\r\n    }\r\n\r\n    function _clearToken() {\r\n        localStorage.removeItem('token_access');\r\n        localStorage.removeItem('token_refresh');\r\n      }\r\n\r\n      return {\r\n        getService : _getService,\r\n        setToken : _setToken,\r\n        getAccessToken : _getAccessToken,\r\n        getRefreshToken : _getRefreshToken,\r\n        clearToken : _clearToken\r\n      }\r\n})();\r\n\r\nexport default LocalStorageService;","import { Redirect } from \"react-router-dom\";\r\nimport { singUpAPI, tokenAPI, userAPI } from \"../api/api\";\r\n\r\nlet initialState = {\r\n    \r\n    // savedToken: null,\r\n    isAuth: false,\r\n    savedToken: null,\r\n    email: null,\r\n    username: null,\r\n    name: null,\r\n    surname: null,\r\n    phone: null,\r\n\r\n}\r\n\r\nconst authReducer = (state = initialState, action) => {\r\n\r\n    switch (action.type) {\r\n        case 'CLIENT-ID':\r\n            return {\r\n                ...state,\r\n                // isAuth: true,\r\n            }\r\n        case 'AUTH-SUCCESS':\r\n            return{\r\n                ...state,\r\n                savedToken: action.token,\r\n                isAuth: true,\r\n            }\r\n        case 'SET-USER-DATA':\r\n            return{\r\n                ...state,\r\n                email: action.email,\r\n                username: action.username,\r\n                name: action.name,\r\n                surname: action.surname,\r\n                phone: action.phone,\r\n            }\r\n\r\n        case 'LOGOUT':\r\n            return {\r\n                ...state,\r\n                isAuth: false,\r\n                savedToken: null,\r\n                email: null,\r\n                username: null,\r\n                name: null,\r\n                surname: null,\r\n                phone: null,\r\n            }\r\n        default:\r\n            return state;\r\n\r\n    }\r\n}\r\n\r\n// export const setUserId = (userId) => {\r\n//     return{\r\n//         type: 'CLIENT-ID',\r\n//         userId,\r\n//     }\r\n// }\r\n\r\nexport const authSuccess = (token) => {\r\n    return{\r\n        type: 'AUTH-SUCCESS',\r\n        token,\r\n        \r\n    }\r\n}\r\nexport const setUserData = (email, username, name, surname, phone) => {\r\n    return{\r\n        type: 'SET-USER-DATA',\r\n        email, username, name, surname, phone,\r\n        \r\n    }\r\n}\r\n\r\nexport const logout = () => {\r\n    localStorage.removeItem('token_access');\r\n    localStorage.removeItem('token_refresh');\r\n    return{\r\n        type: 'LOGOUT',\r\n        \r\n    }\r\n}\r\n\r\nexport const registerMe = (formData) => async(dispatch) =>{\r\n    \r\n    let data = await singUpAPI.postRegistration(\r\n        formData.email, \r\n        formData.password, \r\n        formData.phone, \r\n        formData.invited_by,\r\n        formData.name,\r\n        formData.surname,\r\n        formData.country_key\r\n        );\r\n    \r\n    \r\n    alert(\"Регистрация прошла успешно!\");\r\n    if(data){\r\n        return <Redirect to={'/login'} />\r\n    }\r\n}\r\n\r\nexport const giveToken = (username, password) => async(dispatch) =>{\r\n    \r\n    let data = await tokenAPI.postToken(username, password);\r\n    if(data){\r\n        console.log(data)\r\n        localStorage.setItem('token_access', data.access);\r\n        localStorage.setItem('token_refresh', data.refresh);\r\n        localStorage.setItem('token_userId', data.client_id);\r\n        dispatch(authSuccess(data.access))\r\n    }\r\n}\r\nexport const refreshToken = (token_refresh) => async(dispatch) =>{\r\n    \r\n    let data = await tokenAPI.postRefresh(token_refresh);\r\n    debugger\r\n    if(data){\r\n        console.log(data)\r\n        localStorage.setItem('token_access', data.access);\r\n    }\r\n}\r\n\r\n\r\nexport const getUser = (userId, token__access) => async (dispatch) => {\r\n    let data = await userAPI.getUser(userId, token__access);\r\n    if(data){\r\n        dispatch(setUserData(data.email, data.username, data.name, data.surname, data.phone))\r\n    }\r\n    // data.sort((u0, u1) => {\r\n    //     return (u0.id > u1.id ? 1 : -1);\r\n    // });\r\n    // dispatch(setUsers(data))\r\n}\r\n\r\nexport default authReducer;","import authReducer from \"./authReducer\";\r\nimport thunkMiddleware from \"redux-thunk\";\r\nconst { combineReducers, createStore, applyMiddleware } = require(\"redux\");\r\n\r\n\r\n\r\nlet reducers = combineReducers({\r\n    auth: authReducer,\r\n})\r\n\r\nconst store = createStore(reducers, applyMiddleware(thunkMiddleware))\r\n\r\nwindow.__store__ = store;\r\nexport default store;","import React, { useState } from 'react';\r\nimport { NavLink } from 'react-router-dom';\r\n\r\n\r\nfunction MainPage(props) {\r\n\r\n    const onLogout = () => {\r\n        props.logout();\r\n    }\r\n\r\n    return (\r\n        <div className='MainPage'>\r\n            <div className='container'>\r\n                <div>\r\n                \r\n                    <h3>{props.email}</h3>\r\n                    <h3>{props.username}</h3>\r\n                    <h3>{props.name}</h3>\r\n                    <h3>{props.surname}</h3>\r\n                    <h3>{props.phone}</h3>\r\n                </div>\r\n                <button onClick={onLogout} className={\"btn\"} >Logout</button>\r\n            </div>\r\n\r\n        </div>\r\n    )\r\n}\r\n\r\n\r\n\r\nexport default MainPage;","import React, { useState } from 'react';\r\nimport { connect } from 'react-redux';\r\nimport { NavLink, Redirect, withRouter } from 'react-router-dom';\r\nimport { compose } from 'redux';\r\nimport MainPage from './MainPage';\r\nimport { getUser, refreshToken, logout } from '../../redux/authReducer'\r\n\r\n\r\n\r\nclass MainPageContainer extends React.Component {\r\n\r\n    // constructor(props) {\r\n    //     super(props);\r\n    //     this.state = {buf: false};  \r\n    // }\r\n\r\n    componentDidMount() {\r\n\r\n        // this.refreshProfile()\r\n        \r\n        // let {savedToken} = this.props;\r\n        // if(!savedToken){\r\n        //     return <Redirect to={'/'} /> \r\n        // }\r\n        \r\n\r\n        this.props.getUser(localStorage.token_userId, localStorage.token_access)\r\n            .catch(()=> this.props.history.push('/login'))        \r\n    }\r\n\r\n    render(){\r\n\r\n        if (!this.props.isAuth) {\r\n            return <Redirect to={'/login'} />\r\n        }\r\n\r\n        return (\r\n            <div className='MainPage'>\r\n                <MainPage logout={this.props.logout}\r\n                \r\n                email={this.props.email}\r\n                username={this.props.username}\r\n                name={this.props.name}\r\n                surname={this.props.surname}\r\n                phone={this.props.phone}\r\n                 />\r\n            </div>\r\n        )\r\n    }\r\n    \r\n}\r\n\r\n\r\nconst mapStateToProps = (state) => {\r\n    return {\r\n        getUser: state.auth.getUser,\r\n        userId: state.auth.userId,\r\n        redirectTo: state.auth.redirectTo,\r\n        \r\n        isAuth: state.auth.isAuth,\r\n        email: state.auth.email,\r\n        username: state.auth.username,\r\n        name: state.auth.name,\r\n        surname: state.auth.surname,\r\n        phone: state.auth.phone,\r\n    }\r\n}\r\n\r\nexport default compose(\r\n    connect(mapStateToProps, { getUser, refreshToken, logout }),\r\n    withRouter\r\n    )(MainPageContainer);\r\n    ","import React, { useState } from 'react';\r\nimport { NavLink, Redirect, withRouter } from 'react-router-dom';\r\nimport { Form, Field } from 'react-final-form'\r\nimport { connect } from 'react-redux';\r\nimport { giveToken } from '../../redux/authReducer'\r\nimport './Login.css'\r\nimport { compose } from 'redux';\r\n\r\nfunction Login(props) {\r\n\r\n    const required = value => (value ? undefined : 'Обязателен для заполнения')\r\n    \r\n    const onSubmit = (formData) => {\r\n        props.giveToken(formData.username, formData.password)\r\n            .then(()=> props.history.push('/'))\r\n            .catch(err => {\r\n                console.log(err)\r\n                alert('err')})\r\n    }\r\n\r\n    if (props.isAuth) {\r\n        return <Redirect to={'/'} />\r\n    }\r\n\r\n    return (\r\n        <div className='Login'>\r\n            <div className='nav'>\r\n          {/* <NavLink className='nav__item' to='/'>Перейти в MainPage</NavLink> */}\r\n          <NavLink className='nav__item' to='/signup'>Перейти в SignUp</NavLink>\r\n          <NavLink className='nav__item' to='/login'>Перейти в Login</NavLink>\r\n        </div>\r\n            <div className='container'>\r\n                <Form onSubmit={onSubmit}>\r\n                    {props => (\r\n                        <form className='form' onSubmit={props.handleSubmit}>\r\n                            <div className='form__item'>\r\n                                <label className=\"form__label\">Электронная почта</label>\r\n                                <Field className=\"form__input\" name=\"username\" component=\"input\" placeholder=\"Email\" type=\"email\" validate={required} />\r\n                            </div>\r\n                            <div className='form__item'>\r\n                                <label className=\"form__label\">Пароль</label>\r\n                                <Field className=\"form__input\" name=\"password\" component=\"input\" placeholder=\"Пароль\" type=\"password\" validate={required} />\r\n                            </div>\r\n                            <button className='btn form__btn' type=\"submit\">Submit</button>\r\n                        </form>\r\n                    )}\r\n                </Form>\r\n            </div>\r\n\r\n        </div>\r\n    )\r\n}\r\n\r\n\r\nconst mapStateToProps = (state) => {\r\n    return {\r\n        userId: state.auth.userId,\r\n        redirectTo: state.auth.redirectTo,\r\n        isAuth: state.auth.isAuth,\r\n    }\r\n}\r\n\r\n// export default connect(mapStateToProps, { giveToken })(Login);\r\nexport default compose(\r\n    connect(mapStateToProps, { giveToken }),\r\n    withRouter\r\n    )(Login);\r\n    ","import React, { useState } from 'react';\r\nimport { NavLink, Redirect, withRouter } from 'react-router-dom';\r\nimport { Form, Field } from 'react-final-form'\r\nimport { connect } from 'react-redux';\r\nimport { registerMe } from '../../redux/authReducer'\r\nimport './SignUp.css'\r\nimport { compose } from 'redux';\r\n\r\nfunction SignUp(props) {\r\n\r\n    const onSubmit = (formData) => {\r\n        props.registerMe(formData)\r\n            .then(()=> props.history.push('/login'))\r\n            .catch(err => {\r\n                let errMessage = [\"Ошибка!\"]\r\n                // console.log.apply(err.response.data)\r\n\r\n                err.response.data.user.email && errMessage.push('Поле Адерес электронной почты: ' + err.response.data.user.email + '\\n')\r\n                err.response.data.user.password && errMessage.push('Поле Пароль: ' + err.response.data.user.password + '\\n')\r\n                err.response.data.invited_by && errMessage.push('Поле Invited by: ' + err.response.data.invited_by + '\\n')\r\n                err.response.data.name && errMessage.push('Поле Ваше имя: ' + err.response.data.name + '\\n')\r\n                err.response.data.surname && errMessage.push('Поле Ваша фамилия: ' + err.response.data.surname + '\\n')\r\n                err.response.data.country_key && errMessage.push('Поле Ключ страны: ' + err.response.data.country_key + '\\n')\r\n                alert(errMessage)\r\n            })\r\n    }\r\n\r\n    return (\r\n        <div className='signup'>\r\n        <div className='nav'>\r\n          {/* <NavLink className='nav__item' to='/'>Перейти в MainPage</NavLink> */}\r\n          <NavLink className='nav__item' to='/signup'>Перейти в SignUp</NavLink>\r\n          <NavLink className='nav__item' to='/login'>Перейти в Login</NavLink>\r\n        </div>\r\n            <div className='container'>\r\n                <Form onSubmit={onSubmit}>\r\n                    {props => (\r\n                        <form className='form' onSubmit={props.handleSubmit}>\r\n                            <div className='form__item'>\r\n                                <label className=\"form__label\">Адресс электронной почты</label>\r\n                                <Field className=\"form__input\" name=\"email\" component=\"input\" placeholder=\"Email\" type=\"email\" />\r\n                            </div>\r\n                            <div className='form__item'>\r\n                                <label className=\"form__label\">Пароль</label>\r\n                                <Field className=\"form__input\" name=\"password\" component=\"input\" placeholder=\"Пароль\" type=\"password\" />\r\n                            </div>\r\n                            <div className='form__item'>\r\n                                <label className=\"form__label\">Телефон</label>\r\n                                <Field className=\"form__input\" name=\"phone\" component=\"input\" placeholder=\"Телефон\" />\r\n                            </div>\r\n                            <div className='form__item'>\r\n                                <label className=\"form__label\">Invited by</label>\r\n                                <Field className=\"form__input\" name=\"invited_by\" component=\"select\" placeholder=\"Пригласительный код\">\r\n                                    <option selected value=\"RU-637164\">RU-637164</option>\r\n                                </Field>\r\n                            </div>\r\n                            <div className='form__item'>\r\n                                <label className=\"form__label\">Ваше имя</label>\r\n                                <Field className=\"form__input\" name=\"name\" component=\"input\" placeholder=\"Имя\" />\r\n                            </div>\r\n                            <div className='form__item'>\r\n                                <label className=\"form__label\">Ваша фамилия</label>\r\n                                <Field className=\"form__input\" name=\"surname\" component=\"input\" placeholder=\"Фамилия\" />\r\n                            </div>\r\n                            <div className='form__item'>\r\n                                <label className=\"form__label\">Двухбуквенный код страны</label>\r\n                                <Field className=\"form__input\" name=\"country_key\" component=\"select\" placeholder=\"код страны\">\r\n                                <option selected value=\"RU\">RU</option>\r\n                                </Field>\r\n                            </div>\r\n                            <button className='btn form__btn' type=\"submit\">Submit</button>\r\n                        </form>\r\n                    )}\r\n                </Form>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\n\r\n// class SignUpContainer extends React.Component {\r\n\r\n//     // refreshProfile() {\r\n       \r\n//     //         let token = this.props.savedToken;\r\n//     //         if(!token){\r\n//     //             return <Redirect to={'/'} />\r\n//     //         }\r\n        \r\n//     // }\r\n\r\n//     // componentDidMount() {\r\n\r\n//     //     // this.refreshProfile()\r\n        \r\n//     //     let {savedToken} = this.props;\r\n//     //     if(!savedToken){\r\n//     //         return <Redirect to={'/'} /> \r\n//     //     }\r\n//     //     this.props.getUsers(savedToken);\r\n//     // }\r\n\r\n//     render() {\r\n//         // if (!this.props.isAuth) {\r\n//         //     return <Redirect to={'/'} />\r\n//         // }\r\n//         return (\r\n//             <div>\r\n//                 <SignUp registerMe={this.props.registerMe}\r\n//                 history={this.props.history} />\r\n//             </div>\r\n//         )\r\n//     }\r\n// }\r\n\r\n\r\nconst mapStateToProps = (state) => {\r\n    return {\r\n\r\n    }\r\n}\r\n\r\nexport default compose(\r\n    connect(mapStateToProps, { registerMe }),\r\n    withRouter\r\n    )(SignUp);","import React from 'react';\nimport './App.css';\nimport { Route, HashRouter, NavLink, Redirect } from 'react-router-dom';\nimport store from './redux/redux-store'\nimport { Provider, connect } from 'react-redux';\nimport MainPageContainer from './Components/MainPage/MainPageContainer';\nimport Login from './Components/Login/Login';\nimport SignUp from './Components/SignUp/SignUp';\nimport { authSuccess } from './redux/authReducer'\n\nclass App extends React.Component {\n\n//   componentDidMount() {\n\n//     // this.refreshProfile()\n    \n//     // let {savedToken} = this.props;\n//     // if(!savedToken){\n//     //     return <Redirect to={'/'} /> \n//     // }\n    \n\n//     this.props.getUser(localStorage.token_userId, localStorage.token_access)\n//         .catch(()=> this.props.history.push('/login'))        \n// }\n  render() {\n    const token = localStorage.token_access;\n    if (token) {\n      this.props.authSuccess(token)\n    }\n\n    return (\n      <div className=\"App\">\n        {/* <div className='nav'>\n          <NavLink className='nav__item' to='/'>Перейти в MainPage</NavLink>\n          <NavLink className='nav__item' to='/signup'>Перейти в SignUp</NavLink>\n          <NavLink className='nav__item' to='/login'>Перейти в Login</NavLink>\n        </div> */}\n\n        <Route exact path=\"/\">\n          <MainPageContainer />\n        </Route>\n        <Route path=\"/signup\">\n          <SignUp />\n        </Route>\n        <Route path=\"/login\">\n          <Login />\n        </Route>\n      </div>\n    );\n  }\n\n}\n\nconst mapStateToProps = (state) => {\n  return {\n  }\n}\n\nconst AppContainer = connect(mapStateToProps, {authSuccess})(App);\n\nconst FinalJSApp = (props) => {\n  return (\n\n    <Provider store={store}>\n      <HashRouter>\n        <AppContainer />\n      </HashRouter>\n    </Provider>\n\n  )\n}\n\nexport default FinalJSApp;","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './normalize.css'\nimport './index.css';\nimport FinalJSApp from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <FinalJSApp />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}